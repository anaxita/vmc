# openapi: 3.0.3
# info:
#   title: WVMC
#   version: 1.0.0
# servers:
#   -
#     url: http://localhost:8080
#     description: Локальный сервер
#   -
#     url: https://dc.kmsys.ru:53326
#     description: Основной сервер
# components:
#   schemas:
#     Response:
#       title: Response
#       type: object
#       properties:
#         status:
#           description: Статус ответа
#           type: string
#           example: ok
#         message:
#           description: Обект с опциональными данными
#           type: object
#           example:
#             user:
#               id: 400
#               name: Alex
#     User:
#       title: User
#       type: object
#       properties:
#         id:
#           description: Уникальный идентификатор
#           type: string
#           example: 5
#         name:
#           description: Имя
#           type: string
#           example: anaxita
#         email:
#           description: Логин
#           type: string
#           example: support@mail.ru
#         company:
#           description: Компания
#           type: string
#           example: КМ Системс
#         role:
#           description: Уровень прав
#           type: integer
#           example: 5
#     Server:
#       title: Server
#       type: object
#       properties:
#         id:
#           description: Уникальный идентификатор
#           type: string
#           example: "sdfg-324df-bnn-df-df"
#         name:
#           description: Имя
#           type: string
#           example: SRV_SERVER_ONE
#         hv:
#           description: Гипервизор
#           type: string
#           example: HV07
#         user:
#           description: Учетная запись
#           type: string
#           example: Administrator
#         password:
#           description: Пароль учетной записи
#           type: string
#           example: qwerty123
#         power_status:
#           description: Статус работы
#           type: integer
#           example: 2
#         network:
#           description: Статус сети
#           type: integer
#           example: 2
#   securitySchemes:
#     token:
#       type: http
#       scheme: bearer
#       bearerFormat: JWT
# paths:
#   /signup:
#     post:
#       tags:
#         - Регистрация и аутентификация
#       summary: Регистрация
#       description: Регистрация нового пользователя
#       parameters:
#         - name: Accept
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               application/json
#       requestBody:
#         content:
#           application/json:
#             schema:
#               type: object
#               properties:
#                 name:
#                   description: Имя
#                   type: string
#                 email:
#                   description: Логин
#                   type: string
#                 password:
#                   description: Пароль
#                   type: string
#               required:
#                 - name
#                 - email
#                 - password
#             example:
#               name: Александр
#               email: anaxita@mail.ru
#               password: qwerty123
#       responses:
#         201:
#           description: Успешно создан
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: ok
#                   message:
#                     id: 22
#         200:
#           description: Пользователь уже существует
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: ok
#                   message:
#                     id: 0
#         400:
#           description: Некорректный запрос
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Поля name, email, password  не могут быть пустыми
#                     meta: request has empty fields
#         500:
#           description: Ошибка создания
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Ошибка записи в БД
#                     meta: table is not exist
#   /signin:
#     post:
#       tags:
#         - Регистрация и аутентификация
#       summary: Вход
#       description: Вход по логину паролю
#       parameters:
#         - name: Accept
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               application/json
#       requestBody:
#         content:
#           application/json:
#             schema:
#                 $ref: '#/components/schemas/User'
#             example:
#               email: anaxita
#               password: qwerty123
#       responses:
#         200:
#           description: Успешно
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: ok
#                   message:
#                     token: fg3456.234hdfg856.345846h
#                     refresh_token: cv245.b3un8.bdf4568                  
#         401:
#           description: Неверный логин/пароль
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                 status: err
#                 message:
#                   error: Неверный логин или пароль
#                   meta: "no sql rows"
#         400:
#           description: Некорректный запрос
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Поля email, password  не могут быть пустыми
#                     meta: request has empty fields
#         500:
#           description: Ошибка БД
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Ошибка записи в БД
#                     meta: table is not exist
#   /refresh:
#     post:
#       tags:
#         - Регистрация и аутентификация
#       summary: Обновление пары токенов
#       description: Обновление пары токенов
#       parameters:
#         - name: Authorization
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTQxMDU4OTgsIlVzZXIiOnsiaWQiOjcsIm5hbWUiOiLRgtC10YHRgiIsImVtYWlsIjoidGVzdCJ9LCJUeXBlIjoiYWNjZXNzIn0.eeYhxcZcj-jTI65svCbfrfqBvjSPPywU4qbbWpXdy-o
#           style: simple
#       responses:
#         200:
#           description: Успешно
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: ok
#                   message:
#                     token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTQxMDU4OTgsIlVzZXIiOnsiaWQiOjcsIm5hbWUiOiLRgtC10YHRgiIsImVtYWlsIjoidGVzdCJ9LCJUeXBlIjoiYWNjZXNzIn0.eeYhxcZcj-jTI65svCbfrfqBvjSPPywU4qbbWpXdy-o
#                     refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTQxMDU4OTgsIlVzZXIiOnsiaWQiOjcsIm5hbWUiOiLRgtC10YHRgiIsImVtYWlsIjoidGVzdCJ9LCJUeXBlIjoiYWNjZXNzIn0.eeYhxcZcj-jTI65svCbfrfqBvjSPPywU4qbbW           
#         401:
#           description: Токен недействителен
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                 status: err
#                 message:
#                   error: Токен недействителен
#                   meta: not valid signature
#         400:
#           description: Неверный тип токена
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                 status: err
#                 message:
#                   error: Токен не refresh
#                   meta: Token type is not refresh
#         500:
#           description: Ошибка БД
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Ошибка записи в БД
#                     meta: table is not exist
#   /projects:
#     post:
#       tags:
#         - Проекты
#       summary: Новый проект
#       description: Создать текущему пользователю новый проект
#       parameters:
#         - name: Accept
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               application/json
#         - name: Authorization
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTQxMDU4OTgsIlVzZXIiOnsiaWQiOjcsIm5hbWUiOiLRgtC10YHRgiIsImVtYWlsIjoidGVzdCJ9LCJUeXBlIjoiYWNjZXNzIn0.eeYhxcZcj-jTI65svCbfrfqBvjSPPywU4qbbWpXdy-o
#           style: simple
#       requestBody:
#         content:
#           application/json:
#             schema:
#                 $ref: '#/components/schemas/project'
#             example:
#               title: NewProject
#               description: Need to update some fields in database
#       responses:
#         201:
#           description: Успешно
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: ok
#                   message:
#                     project:
#                       id: 1
#                       title: NewProject
#                       description: Need to update some fields in database
#                       creator_id: 12
#                       created: 02.09.2021 22:06:23
#                       updated: 02.09.2021 22:06:23

#         400:
#           description: Некорректный запрос
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Поля title, description не могут быть пустыми
#                     meta: request has empty fields
#         401:
#           description: Не авторизован
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Нет токена в заголовке
#                     meta: no token in a header
#         500:
#           description: Ошибка БД
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Ошибка записи в БД
#                     meta: table is not exist
#     get:
#       tags:
#         - Проекты
#       summary: Проекты пользователя
#       description: Возвращает список всех проектов пользователя
#       parameters:
#         - name: Authorization
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTQxMDU4OTgsIlVzZXIiOnsiaWQiOjcsIm5hbWUiOiLRgtC10YHRgiIsImVtYWlsIjoidGVzdCJ9LCJUeXBlIjoiYWNjZXNzIn0.eeYhxcZcj-jTI65svCbfrfqBvjSPPywU4qbbWpXdy-o
#           style: simple
#       responses:
#         200:
#           description: Успешно
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                 status: "ok"
#                 message:
#                   projects:
#                   -
#                     id: 1
#                     title: Проект Фиксики
#                     description: чиним все что не движется, а что движется - то останавливаем и чиним!
#                     creator_id: 12
#                     created: 02.09.2021 22:06:23
#                     updated: 02.09.2021 22:06:23
#                   -
#                     id: 2
#                     title: Проект Машина времени
#                     description: разработка машины времени чтобы вместо доты я учил программирование
#                     creator_id: 3
#                     created: 02.09.2021 22:06:23
#                     updated: 02.09.2021 22:06:23
#   /projects/{projectid}:
#     get:
#       tags:
#         - Проекты
#       summary: Проект
#       description: Возвращает проект по ID
#       parameters:
#         - name: Authorization
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTQxMDU4OTgsIlVzZXIiOnsiaWQiOjcsIm5hbWUiOiLRgtC10YHRgiIsImVtYWlsIjoidGVzdCJ9LCJUeXBlIjoiYWNjZXNzIn0.eeYhxcZcj-jTI65svCbfrfqBvjSPPywU4qbbWpXdy-o
#           style: simple
#         - name: projectid
#           in: path
#           required: true
#           schema:
#             type: integer
#             example:
#               25         
#           style: simple
#       responses:
#         200:
#           description: Успешно
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                 status: "ok"
#                 message:
#                   projects:
#                     id: 1
#                     title: Проект Фиксики
#                     description: чиним все что не движется, а что движется - то останавливаем и чиним!
#                     creator_id: 3
#                     created: 02.09.2021 22:06:23
#                     updated: 02.09.2021 22:06:23
#     delete:
#       tags:
#         - Проекты
#       summary: Удалить проект
#       description: Удалить проект
#       parameters:
#         - name: Accept
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               application/json
#         - name: Authorization
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTQxMDU4OTgsIlVzZXIiOnsiaWQiOjcsIm5hbWUiOiLRgtC10YHRgiIsImVtYWlsIjoidGVzdCJ9LCJUeXBlIjoiYWNjZXNzIn0.eeYhxcZcj-jTI65svCbfrfqBvjSPPywU4qbbWpXdy-o
#           style: simple
#         - name: projectid
#           in: path
#           required: true
#           schema:
#             type: integer
#             example:
#               25         
#           style: simple
#       requestBody:
#         content:
#           application/json:
#             schema:
#                 $ref: '#/components/schemas/project'
#             example:
#               title: NewProject
#               description: Need to update some fields in database
#       responses:
#         204:
#           description: Успешно           
#         400:
#           description: Некорректный запрос
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Поля title, description не могут быть пустыми
#                     meta: request has empty fields
#         401:
#           description: Не авторизован
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Нет токена в заголовке
#                     meta: no token in a header
#         500:
#           description: Ошибка БД
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Ошибка записи в БД
#                     meta: table is not exist
#     patch:
#       tags:
#         - Проекты
#       summary: Редактироваать проект
#       description: Редактироваать проект
#       parameters:
#         - name: Accept
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               application/json
#         - name: Authorization
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTQxMDU4OTgsIlVzZXIiOnsiaWQiOjcsIm5hbWUiOiLRgtC10YHRgiIsImVtYWlsIjoidGVzdCJ9LCJUeXBlIjoiYWNjZXNzIn0.eeYhxcZcj-jTI65svCbfrfqBvjSPPywU4qbbWpXdy-o
#           style: simple
#         - name: projectid
#           in: path
#           required: true
#           schema:
#             type: integer
#             example:
#               25         
#           style: simple
#       requestBody:
#         content:
#           application/json:
#             schema:
#                 $ref: '#/components/schemas/project'
#             example:
#               title: NewProject
#               description: Need to update some fields in database
#       responses:
#         204:
#           description: Успешно           
#         400:
#           description: Некорректный запрос
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Поля title, description не могут быть пустыми
#                     meta: request has empty fields
#         401:
#           description: Не авторизован
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Нет токена в заголовке
#                     meta: no token in a header
#         500:
#           description: Ошибка БД
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Ошибка записи в БД
#                     meta: table is not exist
#   /projects/{projectid}/tasks:
#     post:
#       tags:
#         - Задачи
#       summary: Новая задача
#       description: Добавить новую задачу в проект
#       parameters:
#         - name: Authorization
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTQxMDU4OTgsIlVzZXIiOnsiaWQiOjcsIm5hbWUiOiLRgtC10YHRgiIsImVtYWlsIjoidGVzdCJ9LCJUeXBlIjoiYWNjZXNzIn0.eeYhxcZcj-jTI65svCbfrfqBvjSPPywU4qbbWpXdy-o
#           style: simple
#         - name: projectid
#           in: path
#           required: true
#           schema:
#             type: integer
#             example:
#               25         
#           style: simple
#         - name: Accept
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               application/json
#       requestBody:
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/task'
#             example:
#               title: Купить молоко
#               description: Молоко 3% жирности, рублей за 10 в белой упаковке
#               responsible_id: 6
#       responses:
#         201:
#           description: Успешно создан
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: ok
#                   message:
#                     task:
#                       id: 3
#                       title: Купить молоко
#                       description: Молоко 3% жирности, рублей за 10 в белой упаковке
#                       status: "open"
#                       creater_id: 12
#                       responsible_id: 6
#                       project_id: 25
#                       created: 02.09.2021 22:06:23
#                       updated: 16.01.2021 00:19:01
#         400:
#           description: Некорректный запрос
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Поля title, description, responsible_id не могут быть пустыми
#                     meta: request has empty fields
#         401:
#           description: Не авторизован
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Нет токена в заголовке
#                     meta: no token in a header
#         500:
#           description: Ошибка создания
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Ошибка записи в БД
#                     meta: table is not exist
#     get:
#       tags:
#         - Задачи
#       summary: Задачи проекта
#       description: Возвращает список всех задач на проекте id
#       parameters:
#         - name: Authorization
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTQxMDU4OTgsIlVzZXIiOnsiaWQiOjcsIm5hbWUiOiLRgtC10YHRgiIsImVtYWlsIjoidGVzdCJ9LCJUeXBlIjoiYWNjZXNzIn0.eeYhxcZcj-jTI65svCbfrfqBvjSPPywU4qbbWpXdy-o
#           style: simple
#         - name: projectid
#           in: path
#           required: true
#           schema:
#             type: integer
#             example:
#               25         
#           style: simple
#       responses:
#         200:
#           description: Успешно
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                 status: "ok"
#                 message:
#                   tasks:
#                   -
#                     id: 1
#                     title: Купить молоко
#                     description: Сходи и купи
#                     status: "open"
#                     creater_id: 9
#                     responsible_id: 6
#                     project_id: 25
#                     created: 15.01.2021 15:06:23
#                     updated: 16.01.2021 00:19:01
#                   -
#                     id: 4
#                     title: Покормить кота
#                     description: Вискасом только
#                     status: "progress"
#                     creater_id: 12
#                     responsible_id: 12
#                     project_id: 25
#                     created: 02.09.2021 22:06:23
#                     updated: 16.01.2021 00:19:01
#                   -
#                     id: 2
#                     title: Помыть машину
#                     description: Нормально помой
#                     status: "pending"
#                     creater_id: 5
#                     responsible_id: 7
#                     project_id: 25
#                     created: 02.09.2021 22:06:23
#                     updated: 16.01.2021 00:19:01
#                   -
#                     id: 3
#                     title: Покормить кота
#                     description: Вискасом только
#                     status: "close"
#                     creater_id: 12
#                     responsible_id: 12
#                     project_id: 25
#                     created: 02.09.2021 22:06:23
#                     updated: 16.01.2021 00:19:01
#   /projects/{projectid}/tasks/{taskid}:
#     delete:
#       tags:
#         - Задачи
#       summary: Удалить задачу
#       description: Удалить задачу по ID
#       parameters:
#         - name: Accept
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               application/json
#         - name: Authorization
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTQxMDU4OTgsIlVzZXIiOnsiaWQiOjcsIm5hbWUiOiLRgtC10YHRgiIsImVtYWlsIjoidGVzdCJ9LCJUeXBlIjoiYWNjZXNzIn0.eeYhxcZcj-jTI65svCbfrfqBvjSPPywU4qbbWpXdy-o
#           style: simple
#         - name: projectid
#           in: path
#           required: true
#           schema:
#             type: integer
#             example:
#               25         
#           style: simple
#         - name: taskid
#           in: path
#           required: true
#           schema:
#             type: integer
#             example:
#               122         
#           style: simple
#       responses:
#         204:
#           description: Успешно           
#         400:
#           description: Некорректный запрос
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Задача не найдена или уже удалена
#                     meta: task is not found or already deleted
#         401:
#           description: Не авторизован
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Нет токена в заголовке
#                     meta: no token in a header
#         500:
#           description: Ошибка БД
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Ошибка записи в БД
#                     meta: table is not exist
#     patch:
#       tags:
#         - Задачи
#       summary: Редактироваать задачу
#       description: Редактироваать задачу
#       parameters:
#         - name: Accept
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               application/json
#         - name: Authorization
#           in: header
#           required: true
#           schema:
#             type: string
#             example:
#               Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTQxMDU4OTgsIlVzZXIiOnsiaWQiOjcsIm5hbWUiOiLRgtC10YHRgiIsImVtYWlsIjoidGVzdCJ9LCJUeXBlIjoiYWNjZXNzIn0.eeYhxcZcj-jTI65svCbfrfqBvjSPPywU4qbbWpXdy-o
#           style: simple
#         - name: projectid
#           in: path
#           required: true
#           schema:
#             type: integer
#             example:
#               25         
#           style: simple
#         - name: taskid
#           in: path
#           required: true
#           schema:
#             type: integer
#             example:
#               122         
#           style: simple
#       requestBody:
#         content:
#           application/json:
#             schema:
#                 $ref: '#/components/schemas/project'
#             example:
#               title: NewProject
#               description: Need to update some fields in database
#               status: pending
#               responsible_id: 9
#       responses:
#         204:
#           description: Успешно           
#         400:
#           description: Некорректный запрос
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Поля title, description, status, responsible_id не могут быть пустыми
#                     meta: request has empty fields
#         401:
#           description: Не авторизован
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Нет токена в заголовке
#                     meta: no token in a header
#         500:
#           description: Ошибка БД
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Response'
#               example:
#                   status: err
#                   message:
#                     err: Ошибка записи в БД
#                     meta: table is not exist